{"version":3,"sources":["webpack:///./src/views/Auth/LoginView.js","webpack:///./src/components/Api.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","position","logo","_defineProperty","width","padding","breakpoints","down","submitProgress","top","left","marginTop","marginLeft","LoginView","classes","navigate","useNavigate","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","_useState4","isForgotPassword","setIsForgotPassword","_useState6","email","forgotPasswordState","setForgetPasswordState","_useState8","isResetPasswordSubmitting","setIsRestPasswordSubmitting","React","createElement","Fragment","Page","className","title","CustomAlert","open","onClose","Box","display","flexDirection","justifyContent","Container","maxWidth","alignItems","marginBottom","Formik","initialValues","password","validationSchema","Yup","shape","max","required","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","login","config","headers","Cookies","get","axios","post","then","res","_res$data","status","window","localStorage","setItem","data","token","error","response","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","color","variant","TextField","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","my","Button","disabled","size","right","Link","onClick","component","RouterLink","to","Dialog","DialogTitle","id","DialogContent","DialogContentText","autoFocus","e","target","DialogActions","forgotPassword","console","log","CircularProgress","signup","logout","profile","resetPassword","notification","products","edit_product","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","boxShadow","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"LoginView.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  CircularProgress,\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\n\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    position: \"relative\",\n  },\n\n  logo: {\n    width: 150,\n    padding: 10,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 110,\n    },\n  },\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\n    useState(false);\n\n  const handleForgotPassword = () => {\n    const url = Api.forgotPassword;\n    setIsRestPasswordSubmitting(true);\n    const config = {\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n    };\n\n    axios\n      .post(url, forgotPasswordState, config)\n      .then((res) => {\n        setShowAlert({\n          isAlert: true,\n          alertText: res.data[\"message\"],\n          severity: \"success\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        setShowAlert({\n          isAlert: true,\n          alertText: error.response.data[\"message\"],\n          severity: \"error\",\n          alertTitle: \"Error\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      });\n  };\n\n  return (\n    <>\n      <Page className={classes.root} title=\"Login\">\n        {showAlert.isAlert ? (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        ) : null}\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"sm\">\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              {/* We can place our logo here */}\n            </Box>\n            <Formik\n              initialValues={{\n                email: \"\",\n                password: \"\",\n              }}\n              validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email(\"Must be a valid email\")\n                  .max(255)\n                  .required(\"Email is required\"),\n                password: Yup.string()\n                  .max(255)\n                  .required(\"Password is required\"),\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                const url = Api.login;\n\n                const config = {\n                  headers: {\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                  },\n                };\n\n                axios\n                  .post(url, values, config)\n                  .then((res) => {\n                    if (res.status === 200) {\n                      window.localStorage.setItem(\n                        \"token\",\n                        res.data?.data?.token\n                      );\n                      setSubmitting(false);\n                      navigate(\"/\");\n                    }\n                  })\n                  .catch((error) => {\n                    if (error.response.status === 400) {\n                      setShowAlert({\n                        isAlert: true,\n                        alertText: \"Invalid credentials\",\n                        severity: \"error\",\n                        alertTitle: \"Error\",\n                      });\n                      setSubmitting(false);\n                    } else {\n                      setShowAlert({\n                        isAlert: true,\n                        alertText: \"Something went wrong\",\n                        severity: \"error\",\n                        alertTitle: \"Error\",\n                      });\n                      resetForm();\n                      setSubmitting(false);\n                    }\n                  });\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values,\n              }) => (\n                <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                  <Box mb={3}>\n                    <Typography color=\"textPrimary\" variant=\"h2\">\n                      Sign in\n                    </Typography>\n                  </Box>\n\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                  <Box my={2}>\n                    <Button\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Sign in now\n                    </Button>\n                  </Box>\n                  {/* <Typography color=\"textSecondary\" variant=\"body1\">\n                  Don&apos;t have an account?{\" \"}\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\">\n                    Sign up\n                  </Link>\n                </Typography> */}\n                  <Box display=\"flex\" justifyContent=\"space-between\">\n                    <Typography color=\"textSecondary\" variant=\"body1\" right={0}>\n                      <Link\n                        onClick={() => setIsForgotPassword(true)}\n                        color=\"primary\"\n                        variant=\"h6\"\n                      >\n                        Forgot Password?\n                      </Link>\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      Don&apos;t have an account?{\" \"}\n                      <Link component={RouterLink} to=\"/register\" variant=\"h6\">\n                        Sign up\n                      </Link>\n                    </Typography>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n          </Container>\n        </Box>\n      </Page>\n\n      <Dialog\n        open={isForgotPassword}\n        onClose={() => setIsForgotPassword(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Forgot Password?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter your email address to reset password\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            autoComplete=\"off\"\n            value={forgotPasswordState.email}\n            onChange={(e) => setForgetPasswordState({ email: e.target.value })}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIsForgotPassword(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleForgotPassword}\n            color=\"primary\"\n            disabled={isResetPasswordSubmitting}\n          >\n            Reset Password\n            {isResetPasswordSubmitting && (\n              <CircularProgress size={24} className={classes.submitProgress} />\n            )}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default LoginView;\n","export default {\n  // Auth endpoints\n  login: \"/api/v1/login/\",\n  signup: \"/api/v1/signup/\",\n  logout: \"/api/v1/logout/\",\n  profile: \"/api/v1/profile/\",\n  forgotPassword: \"/api/v1/forgot-password/\",\n  resetPassword: \"/api/v1/reset-password/\",\n\n  // App endpoints\n  notification: \"/api/v1/notification/\",\n  products: \"/api/v1/products/\",\n  edit_product: \"/api/v1/edit_product/\",\n};\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}