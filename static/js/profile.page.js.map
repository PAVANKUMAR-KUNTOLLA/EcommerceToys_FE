{"version":3,"sources":["webpack:///./src/views/Profile/profile.page.js","webpack:///./src/components/Page.js"],"names":["customProfileStyles","makeStyles","theme","MainBlock","_defineProperty","display","marginTop","flexDirection","width","breakpoints","up","Account","gap","maxWidth","justifyContent","marginLeft","marginRight","down","marginBottom","ProfilePage","_useState2","_slicedToArray","useState","expanded","setExpanded","customStyles","dispatch","useDispatch","_useState4","id","name","email","orderHistory","visitHistory","userInfo","setUserInfo","createData","calories","fat","carbs","protein","handleAccordionChange","panel","event","isExpanded","useEffect","setLoadingSpin","privateApiGET","Api","profile","then","response","status","data","console","log","info","prev","_objectSpread","order_history","visit_history","error","React","createElement","Page","title","Grid","sx","Typography","variant","Container","className","Box","xmlns","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","alignContent","TextField","label","value","Accordion","onChange","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","key","border","scope","product__title","quantity","updated_at","price","forwardRef","_ref","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"profile.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  useMediaQuery,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Card from \"@mui/material\";\r\n\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport Api from \"../../components/Api\";\r\nimport { privateApiGET } from \"../../components/PrivateRoute\";\r\nimport { setLoadingSpin } from \"../../redux/products/produtsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst customProfileStyles = makeStyles((theme) => ({\r\n  MainBlock: {\r\n    display: \"flex\",\r\n    marginTop: \"50px\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  Account: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"16px\",\r\n    maxWidth: \"50%\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: \"80%\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfilePage = () => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const customStyles = customProfileStyles();\r\n  const dispatch = useDispatch();\r\n  const [userInfo, setUserInfo] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    orderHistory: [],\r\n    visitHistory: [],\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAddress((prevAddress) => ({\r\n      ...prevAddress,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // You can perform any additional logic or submit the form data here\r\n    console.log(\"Form Data:\", address);\r\n  };\r\n\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n\r\n  const rows = [\r\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\n  const handleFetchProfileData = () => {\r\n    dispatch(setLoadingSpin(true));\r\n    privateApiGET(Api.profile)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          let info = data?.data;\r\n          setUserInfo((prev) => ({\r\n            ...prev,\r\n            id: info.id,\r\n            name: info.name,\r\n            email: info.email,\r\n            orderHistory: info.order_history,\r\n            visitHistory: info.visit_history,\r\n          }));\r\n          dispatch(setLoadingSpin(false));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        dispatch(setLoadingSpin(false));\r\n      });\r\n  };\r\n\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchProfileData();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Grid\r\n        maxWidth=\"lg\"\r\n        sx={{\r\n          marginBottom: \"50px\",\r\n          justifyContent: \"space-between\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h3\"\r\n          sx={{ marginBottom: \"30px\", marginTop: \"20px\", marginLeft: \"10px\" }}\r\n        >\r\n          Account Details\r\n        </Typography>\r\n        <hr></hr>\r\n      </Grid>\r\n      <Container maxWidth=\"lg\" className={customStyles.MainBlock}>\r\n        <Container maxWidth=\"sm\">\r\n          <Box className={customStyles.Account}>\r\n            <Grid display={\"flex\"}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"icon icon-tabler icon-tabler-user-circle\"\r\n                width=\"64\"\r\n                height=\"64\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"#2c3e50\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\r\n                <path d=\"M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0\" />\r\n                <path d=\"M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855\" />\r\n              </svg>\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{\r\n                  marginLeft: \"20px\",\r\n                  alignContent: \"center\",\r\n                  marginTop: \"auto\",\r\n                  marginBottom: \"auto\",\r\n                }}\r\n              >\r\n                Profile\r\n              </Typography>\r\n            </Grid>\r\n            <TextField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={userInfo.name}\r\n            />\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              value={userInfo.email}\r\n            />\r\n          </Box>\r\n          <Accordion\r\n            expanded={expanded === \"panel1a\"}\r\n            onChange={handleAccordionChange(\"panel1a\")}\r\n            sx={{ marginTop: \"20px\" }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>Ordered History</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <TableContainer component={Paper} sx={{ marginTop: \"35px\" }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"left\">Quantity</TableCell>\r\n                      <TableCell align=\"left\">Price</TableCell>\r\n                      <TableCell align=\"left\">Ordered Date</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {userInfo[\"orderHistory\"].map((row) => (\r\n                      <TableRow\r\n                        key={row.id}\r\n                        sx={{\r\n                          \"&:last-child td, &:last-child th\": { border: 0 },\r\n                        }}\r\n                      >\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.product__title}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.quantity}</TableCell>\r\n                        <TableCell align=\"left\">{row.updated_at}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === \"panel2a\"}\r\n            onChange={handleAccordionChange(\"panel2a\")}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>Ordered History</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <TableContainer component={Paper} sx={{ marginTop: \"35px\" }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"left\">Quantity</TableCell>\r\n                      <TableCell align=\"left\">Price</TableCell>\r\n                      <TableCell align=\"left\">Ordered Date</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {userInfo[\"visitHistory\"].map((row) => (\r\n                      <TableRow\r\n                        key={row.id}\r\n                        sx={{\r\n                          \"&:last-child td, &:last-child th\": { border: 0 },\r\n                        }}\r\n                      >\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.product__title}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.price}</TableCell>\r\n                        <TableCell align=\"left\">{row.updated_at}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Container>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}